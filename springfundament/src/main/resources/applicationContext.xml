<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--    开启注解以使用@Autowired、@Resources等注解可以起作用-->
    <context:annotation-config/>
    <!--    开启context扫描-->
    <context:component-scan base-package="com.springstarter"/>

    <!--  ************************ ioc_01 **********************************************************  -->
    <bean id="cleanAir" class="com.springstarter.b02_spring_fundament.ioc_01.CleanAir">
        <qualifier value="cleanair"/>
    </bean>
    <bean id="dirtyAir" class="com.springstarter.b02_spring_fundament.ioc_01.DirtyAir">
        <qualifier value="dirtyair"/>
    </bean>
    <bean id="person" class="com.springstarter.b02_spring_fundament.ioc_01.Person"/>
    <!--  ****** ioc_01 end ******  -->

    <!--  ********************** ioc_container ********************************************************  -->
    <!--  ^^^^^^^^^^^ ioc_container - bean_config_01 ^^^^^^^^^^^^^^  -->
    <!--    基于XML配置Bean-->
    <bean id="user" class="com.springstarter.c03_spring_ioc.ioc_container.bean_config_01.UserBean"/>

    <!--    基于Java类配置Bean-->
    <bean id="conf" class="com.springstarter.c03_spring_ioc.ioc_container.bean_config_01.AppConf"/>
    <!--  ^^^^^ end ^^^^^^^  -->

    <!--  ^^^^^^^^^^^ ioc_container - bean_inject_02 -> xml_inject ^^^^^^^^^^^^^^  -->
    <bean id="xmlinstance" class="com.springstarter.c03_spring_ioc.ioc_container.bean_inject_02.xml_inject.field_constructor.XMLInstance">

        <!-- 属性注入-->
        <!-- name-属性名, value-设置基本数据类型的属性值, 在spring配置文件中，bean之间可以相互引用，引用时可以用<ref>标签配置bean的id属性-->
        <property name="air" ref="cleanAir"/>
        <property name="name" value="Kavin"/>

        <!-- 构造函数注入-->
        <!-- 使用constructor-arg设置构造函数的参数，index设置参数的顺序,ref引用bean的id,value设置构造函数参数值-->
        <constructor-arg index="1" ref="cleanAir"/>
        <constructor-arg index="0" value="Kavin" />

    </bean>

    <!--工厂方法注入-->
    <!--    静态工厂方法: 只需设置工厂方法对应的类，以及对应的工厂方法-->
    <bean id="xmlfactorystaticinstance" class="com.springstarter.c03_spring_ioc.ioc_container.bean_inject_02.xml_inject.factory.XMLFactory" factory-method="CreateStaticInsance"/>
    <!-- 实例工厂方法：先实例化工厂类，再通过工厂类对象调用实例方法获取bean对象-->
    <bean id="xmlfactory" class="com.springstarter.c03_spring_ioc.ioc_container.bean_inject_02.xml_inject.factory.XMLFactory"/>
    <bean id="xmlfactoryinstance" factory-bean="xmlfactory" factory-method="CreateInstance" destroy-method="DestroyMethod" init-method="InitMethod"/>

    <!-- 自定义属性编辑器 -->
    <bean id="customEditorConfigurer" class="org.springframework.beans.factory.config.CustomEditorConfigurer">
        <!--        将日期字符串转换为java.util.Date对象-->
        <property name="customEditors">
            <map>
                <entry key="java.util.Date" value="com.springstarter.c03_spring_ioc.ioc_container.bean_inject_02.xml_inject.property_editor.CustomerProperty"/>
            </map>
        </property>
    </bean>
    <bean id="xmlCollectionsDemo" class="com.springstarter.c03_spring_ioc.ioc_container.bean_inject_02.xml_inject.property_editor.XmlCollectionsDemo">
        <!--    常见数据类型注入-->
        <!--    List属性注入-->
        <property name="lists">
            <list>
                <value>1</value>
                <ref bean="cleanAir"/>
                <bean class="com.springstarter.b02_spring_fundament.ioc_01.CleanAir"/>
            </list>
        </property>
        <!-- Set属性注入 -->
        <property name="sets">
            <set>
                <value>1</value>
                <ref bean="cleanAir"/>
                <bean class="com.springstarter.b02_spring_fundament.ioc_01.CleanAir"/>
            </set>
        </property>
        <!-- Map属性注入 -->
        <property name="maps">
            <map>
                <entry key="key1" value="1"/>
                <entry key="key2" value-ref="cleanAir"/>
                <entry key="key3">
                    <bean class="com.springstarter.b02_spring_fundament.ioc_01.CleanAir"/>
                </entry>
            </map>
        </property>
        <!-- Properties属性注入 -->
        <property name="props">
            <props>
                <prop key="prokey1">prokeyA</prop>
                <prop key="prokey2">prokeyB</prop>
            </props>
        </property>
        <!-- 注入Date类型属性 -->
        <property name="date" value="2023-06-03"/>
    </bean>
    <!--  ^^^^^ end ^^^^^^^  -->

    <!--  ^^^^^^^^^^^ ioc_container - bean_scope_lifecycle_03 ^^^^^^^^^^^^^^  -->
        <bean id="userBean" class="com.springstarter.c03_spring_ioc.ioc_container.bean_scope_lifecycle_03.UserBean" destroy-method="myDestroy" init-method="myInit">
            <property name="name" value="Kavin"/>
        </bean>
        <bean id="postProcessor" class="com.springstarter.c03_spring_ioc.ioc_container.bean_scope_lifecycle_03.CustomBeanPostProcessor"/>
    <!--  ^^^^^ end ^^^^^^^  -->

    <!--  ****** ioc_container end ******  -->



</beans>